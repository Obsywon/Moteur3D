Coordonées barycentriques 
x = X0. (1 - t) + xi. t
y = y0 . (1-t) + yi. t 

autre manière de voir :
x = x0 +(x1 -x0) * t
y = y0 + (y1 - y0) * t 

p(t) = p0 + t * vecteur d

t + (1 - t) = 1
si t = 0: point 0, t = 1; point final;
entre les deux; n'importe quel point entre p0 et pf -> Boucler de 0 à 1 permet de remplir un trait
(x0 + x1) / 2 : point au milieu du segment entre x1 et X0
x0 + 2 - x1 => En dehors du segment mais sur la même droite.



Modèles normées:
(x, y, z) appartiennent à [-1, +1]^3 
Nécessité de parser les fichiers obj et récupérer uniquement les sommets (lignes commencant par 'v', pas 'vn' ou 'vt')
1) commencer par obtenir un nuage de points 2D (une coordonnée parmi x,y ou z)
(comparer en utilisant un visualiseur de fichier obj)
(ne pas oublier de scaler sur l'écran : (x * w/ 2) + (w / 2) 

Lignes commençant par f : sur une ligne, chaque triplet: prendre la première valeur de chaque triplet.
décrémenter de 1 (dans liste de noeuds) pour retrouver les triangles


Dans un triangle, on associe a chaque point un poids alpha, beta, gamma;
si un de ces poids sont négatifs, point est à l'exterieur.
p = alpha* A + beta* B + gamma * C 

Pour calculer ces poids :
Ax * alpha + Bx * beta + Cx * gamma = Px 
Ay * alpha + By * beta + Cy * gamme = Py
alpha + beta + gamma = 1

On peut remettre sous forme de matrice :
(alpha
beta
gamma)
 = 
( Ax Bx Cx 
Ay By Cy 
1 1 1)
/
(Px 
Py 
1)

Même idée mais sur un segment avec P entre A et B:
beta = P - A / B - A
alpha = B - P / B - A 

Et sur un triangle ABC :
Alpha = aire(PBC) / aire (ABC)
Beta = aire (PCA) / aire (ABC)
gamma = aire (PAB) / arie (ABC)

!! aire signée dans l'ordre counter clockwise
-> Triangle peut être négatif. Si le triangle ABC est > 0 et l'aire de l'autre est négatif, P est dehors.




vt : sommet de texture
avec coordonnées u et v à remettre sur les faces 
correspond aux f :
(a/b/c, a/b/c, a/b/c)
le a correspond à l'indice d'un nuage V 
les b correspondent aux indices d'un nuage vt (+1)
(entre 0 et 1, à remettre à la taille de l'image)
Interpolation des coordonnées U,V pour récupérer la couleur dans la texture 
(u, v) = alpa . (u1; v1) + beta (u2, v2) + gamma (u3, v3)

a.x * alpha + b.x * beta + c.x * gamma 
avec a,b et c : sommets de la texture